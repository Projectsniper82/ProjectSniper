{"ast":null,"code":"import { struct } from '@solana/buffer-layout';\nimport { publicKey, bool } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a pausable config */\nexport const PausableConfigLayout = struct([publicKey('authority'), bool('paused')]);\nexport const PAUSABLE_CONFIG_SIZE = PausableConfigLayout.span;\nexport function getPausableConfig(mint) {\n  const extensionData = getExtensionData(ExtensionType.PausableConfig, mint.tlvData);\n  if (extensionData !== null) {\n    return PausableConfigLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}\n/** Buffer layout for de/serializing a pausable account */\nexport const PausableAccountLayout = struct([]); // esline-disable-line\nexport const PAUSABLE_ACCOUNT_SIZE = PausableAccountLayout.span;\nexport function getPausableAccount(account) {\n  const extensionData = getExtensionData(ExtensionType.PausableAccount, account.tlvData);\n  if (extensionData !== null) {\n    return PausableAccountLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}","map":{"version":3,"names":["struct","publicKey","bool","ExtensionType","getExtensionData","PausableConfigLayout","PAUSABLE_CONFIG_SIZE","span","getPausableConfig","mint","extensionData","PausableConfig","tlvData","decode","PausableAccountLayout","PAUSABLE_ACCOUNT_SIZE","getPausableAccount","account","PausableAccount"],"sources":["/home/sniperbot_1/solana-wallet-dashboard/solana-token-manager/node_modules/@solana/spl-token/src/extensions/pausable/state.ts"],"sourcesContent":["import { struct } from '@solana/buffer-layout';\nimport { publicKey, bool } from '@solana/buffer-layout-utils';\nimport type { PublicKey } from '@solana/web3.js';\nimport type { Account } from '../../state/account.js';\nimport type { Mint } from '../../state/mint.js';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n\n/** PausableConfig as stored by the program */\nexport interface PausableConfig {\n    /** Authority that can pause or resume activity on the mint */\n    authority: PublicKey;\n    /** Whether minting / transferring / burning tokens is paused */\n    paused: boolean;\n}\n\n/** Buffer layout for de/serializing a pausable config */\nexport const PausableConfigLayout = struct<PausableConfig>([publicKey('authority'), bool('paused')]);\n\nexport const PAUSABLE_CONFIG_SIZE = PausableConfigLayout.span;\n\nexport function getPausableConfig(mint: Mint): PausableConfig | null {\n    const extensionData = getExtensionData(ExtensionType.PausableConfig, mint.tlvData);\n    if (extensionData !== null) {\n        return PausableConfigLayout.decode(extensionData);\n    } else {\n        return null;\n    }\n}\n\n/** Pausable token account state as stored by the program */\nexport interface PausableAccount {} // eslint-disable-line\n\n/** Buffer layout for de/serializing a pausable account */\nexport const PausableAccountLayout = struct<PausableAccount>([]); // esline-disable-line\n\nexport const PAUSABLE_ACCOUNT_SIZE = PausableAccountLayout.span;\n\nexport function getPausableAccount(account: Account): PausableAccount | null {\n    const extensionData = getExtensionData(ExtensionType.PausableAccount, account.tlvData);\n    if (extensionData !== null) {\n        return PausableAccountLayout.decode(extensionData);\n    } else {\n        return null;\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,SAAS,EAAEC,IAAI,QAAQ,6BAA6B;AAI7D,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAUrE;AACA,OAAO,MAAMC,oBAAoB,GAAGL,MAAM,CAAiB,CAACC,SAAS,CAAC,WAAW,CAAC,EAAEC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEpG,OAAO,MAAMI,oBAAoB,GAAGD,oBAAoB,CAACE,IAAI;AAE7D,OAAM,SAAUC,iBAAiBA,CAACC,IAAU;EACxC,MAAMC,aAAa,GAAGN,gBAAgB,CAACD,aAAa,CAACQ,cAAc,EAAEF,IAAI,CAACG,OAAO,CAAC;EAClF,IAAIF,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOL,oBAAoB,CAACQ,MAAM,CAACH,aAAa,CAAC;EACrD,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ;AAKA;AACA,OAAO,MAAMI,qBAAqB,GAAGd,MAAM,CAAkB,EAAE,CAAC,CAAC,CAAC;AAElE,OAAO,MAAMe,qBAAqB,GAAGD,qBAAqB,CAACP,IAAI;AAE/D,OAAM,SAAUS,kBAAkBA,CAACC,OAAgB;EAC/C,MAAMP,aAAa,GAAGN,gBAAgB,CAACD,aAAa,CAACe,eAAe,EAAED,OAAO,CAACL,OAAO,CAAC;EACtF,IAAIF,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOI,qBAAqB,CAACD,MAAM,CAACH,aAAa,CAAC;EACtD,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}